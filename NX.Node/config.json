{
  "hive": "demo", // The name of the hive
  "tier": "dev", // The tier that the hive runs in, change to latest for production
  "field": [ "10.192.180.160:2375" ], // The list of fields

  "repo_project": "nxproject", // The Docker repository name
  "root_folder": "/etc/nxproject", // folder where data is kept

  // Default values, just to demo

  "http_port": "8086", // The port where the HTTP server listens
  "http_threads": "4", // Number of HTTP process threads to run

  // Let's link in React
  "ui": "react",

  // Profile

  "uses": [ "Proc.SocketIO", "Route.File", "Proc.Office" ], // To give the system some flavor

  // Use MongoDb

  "nosql": "mongodb",

  // Queens duties

  //"qd_uses": [ "Proc.NginX" ],
  //"qd_bumble": [ "redis" ],
  //"qd_worker": [ "1" ],

  "secure_code": "wqfmtohhofyzzrojnhvy", // The security code
  // From https://www.random.org/strings/?num=1&len=20&loweralpha=on&unique=on&format=html&rnd=new

  // Minio
  "minio_access": "myaccesskey",
  "minio_secret": "mysecretkey",

  // These are for development

  "routing_bumble": [], // Allow access to SocketIO
  //"routing_proc": [ "Chores" ], // Map Chores procs
  "routing_debug": "n",

  "verbose": "n", // Tell me what is going on
  "make_genome": "y", // Make the genome (reload image) ("y" when ready to release)
  "make_bee": "y", // Make a bee *"y" when ready to test in a container)
  "code_folder": [ "C:\\Candid Concepts\\NX\\Office" ], // Folders where extra code is located"
  "recycle_containers": "n", // If you change root_folder or any genome, set to y

  // NX.Office
  "document_fn": "n", // Do we generate the Fn documentation for the readme?
  "document_task": "n", // Do we generate the Elsa TypeScript file for tasks? 
  "document_workflow": "n" // Do we generate the Elsa TypeScript file for workflows? 

  // NOTE:  If you set any of the above to "Y", set "make_genome": "n" and "make_bee": "n".
  // This will generate the files in the proper places.  Note that you will need to recompile
  // Else

}